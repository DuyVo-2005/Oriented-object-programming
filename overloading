
#include <iostream>
using namespace std;
class PhanSo {
    /*
    //khong duoc phep truy xuat private tu ben ngoai lop
    private:
        int tu;
        int mau;
    public:
    //public truy xuat trong va ngoai lop
        void nhap() {
            cin >> tu >> mau;
        }
        void xuat() {
            cout << tu << " " << mau;
        }
        void ganMau(int mauMoi) {
            if(mauMoi!=0)
                mau = mauMoi;
        }
    */
    // con tro this: thuoc tinh doi tuong truyen vao.Vd: class a->this->a
private:
    //khong duoc phep truy xuat private tu ben ngoai lop
    int tu;
    int mau;
public:
    //public truy xuat trong va ngoai lop
    //phuong thuc khoi tao-Chuan bi du lieu(constructor)
    PhanSo() {
        this->tu = 0;
        this->mau = 1;
    }
    PhanSo(int tu, int mau) {
        this->tu = tu;
        if (mau != 0)
            this->mau = mau;
        else
            this->mau = 1;
    }
    PhanSo(const PhanSo& x) {//cam ket ko doi x
        this->tu = x.tu;
        this->mau = x.mau;
    }
    void nhap() {
        cin >> tu >> mau;
    }
    void xuat() {
        cout << tu << " " << mau;
    }
    void ganMau(int mauMoi) {
        /*
        * int mau=0;//!= this->mau
        */
        if (mau != 0)
            mau = mauMoi;
    }
    void ganTu(int tu) {
        this->tu = tu;
    }
    int layTu() {
        return this->tu;
    }
    int layMau() {
        return this->mau;
    }
    PhanSo nhan(PhanSo b) {
        PhanSo kq;
        kq.ganTu(this->layTu() * b.layTu());
        kq.ganMau(this->layMau() * b.layMau());
        return kq;
    }
    PhanSo* nhan(PhanSo* b) {
        PhanSo* kq = new PhanSo;
        kq->tu = this->tu * b->tu;
        kq->mau = this->mau * b->mau;
        return kq;
    }
    /*PhanSo nhan(int x) {
        PhanSo kq;
        kq.tu = this->tu * x;
        kq.mau = this->mau;
        return kq;
    }*/
    PhanSo* nhan(int x) {
        PhanSo* kq = new PhanSo;
        kq->tu = this->tu * x;
        kq->mau = this->mau;
        return kq;

    }
    PhanSo operator+(const PhanSo& y) {
        //co tham so this nam ben phai toan tu
        PhanSo res;
        res.tu = this->tu * y.mau + this->mau * y.tu;
        res.mau = this->mau * y.mau;
        return res;
    }
    PhanSo operator++() {
        //ko tham so this nam trai toan tu
        //tien to -> cong sau
        this->tu += this->mau;
        return *this;
    }
    PhanSo operator++(int) {//nummy: tham so gia
        //operator: << (cout<<ps)
        PhanSo tmp = *this;
        tmp.tu += this->mau;
        return tmp;
    }
    //friend void operator<<(ostream& out, PhanSo p);
    friend ostream& operator<<(ostream& out, PhanSo& p);
    //tra ve out de out lien hoan (cout<<ps1<<ps2)
};
//ham ben ngoai cho phep truyen hai tham so, ben trong class chi truyen 1 hoac 0 tham so
//void operator<<(ostream& out, PhanSo p) {
//    out << p.tu << "/" << p.mau;
//}
ostream& operator<<(ostream& out, PhanSo &p) {
    out << p.tu << "/" << p.mau;
    return out;
}
int main()
{
    /*PhanSo a;
    a.nhap();
    //a->ganMau(0);
    //a.xuat();
    //PhanSo b;
    //b.nhap();
    //b.xuat();
    PhanSo c=a.nhan(5);
    cout << "\n";
    c.xuat();*/
    /*PhanSo* a = new PhanSo;
    PhanSo* b = new PhanSo;
    a->nhap();
    b->nhap();
    PhanSo* c = a->nhan(5);
    PhanSo* c = a->nhan(b);
    c->xuat();*/
    PhanSo a(1, 2), b(1,1);
    //a.xuat();
    //PhanSo b(a);
    //PhanSo c = a + b;
    /*PhanSo c;
    ++c;
    c.xuat();*/
    cout<<a<<" " << b;
    return 0;
}
