//chot
//Ho va ten: Vo Le Khanh Duy
#include<iostream>
using namespace std;
#define Max 100
class CIntArray {
	//Ho va ten: Vo Le Khanh Duy
private:
	int* array;
	int size;
public:
	CIntArray() {
		//Ho va ten: Vo Le Khanh Duy
		this->array = NULL;
		this->size = 0;
	}
	CIntArray(int arraySize) {
		//Ho va ten: Vo Le Khanh Duy
		if (arraySize >= 0) {
			this->size = arraySize;
			if(arraySize > 0){
				this->array = new int[this->size];
				for (int i = 0; i < this->size; i++)
					this->array[i] = 0;
			}
		}
		else{
			cout<<"\nSo luong phan tu mang vua nhap khong hop le! Mac dinh gan mang 0 phan tu!";
			this->size = 0;
			this->array = NULL;
		}
	}
	CIntArray(const CIntArray& other) {
		//Ho va ten: Vo Le Khanh Duy
		// tao lap sao chep ->  gan vao vung nho moi -> ko anh huong cai con lai khi thay doi 1 trong 2; &- thao tac truc tiep tu vung nho da co
		this->size = other.size;
		if(other.size != 0){
			this->array = new int[this->size];
			for (int i = 0; i < this->size; i++)
				this->array[i] = other.array[i];
		}
		else
			this->array = NULL;
	}
	void input() {
		//Ho va ten: Vo Le Khanh Duy
		cout << "\nNhap kich thuoc mang can nhap: ";
		cin >> this->size;
		if (this->size > 0) {
			cout << "Nhap cac phan tu mang:\n";
			this->array = new int[this->size];
			for (int i = 0; i < this->size; i++) {
				cout << "Nhap array[" << i << "] = ";
				cin >> this->array[i];
			}
		}
		else{
			cout<<"Kich thuoc khong hop le! Mac dinh gan mang rong!";
			this->size = 0;
		}
	}
	void print() {
		//Ho va ten: Vo Le Khanh Duy
		cout << "\nKich thuoc mang: " << this->size;
		if (this->size > 0) {
			cout << "\nCac phan tu mang: " << "\n";
			for (int i = 0; i < this->size; i++)
				cout << this->array[i] << " ";
		}
		else
			cout << "\nMang rong!";
		cout << "\n";
	}
	void remove() {
		//Ho va ten: Vo Le Khanh Duy
		if (this->size > 0) {
			delete[]this->array;
			this->size = 0;
		}
	}
	void addElement(int val) {
		//Ho va ten: Vo Le Khanh Duy
		// add last
		if (this->size == 0) {
			this->array = new int[1];
			this->size = 1;
		}
		else {
			this->size += 1;
			int* tmp = new int[this->size];
			for (int i = 0; i < this->size - 1; i++)
				tmp[i] = this->array[i];
			delete[]this->array;
			this->array = tmp;
		}
		array[this->size - 1] = val;
	}
	void addElement(int* p, int n) {
		//Ho va ten: Vo Le Khanh Duy
		if (this->size == 0 && n > 0)
			this->array = new int[n];
		if (n > 0) {
			int i;
			int* tmp = new int[this->size + n];
			for (i = 0; i < this->size; i++)
				tmp[i] = array[i];
			this->size += n;
			for (int j = 0; i < this->size; i++, j++)
				tmp[i] = p[j];
			array = tmp;
		}
	}
	int getElement(int idx) {
		//Ho va ten: Vo Le Khanh Duy
		if (idx >= 0 && idx < this->size)
			return this->array[idx];
	}
	int getSize() {
		//Ho va ten: Vo Le Khanh Duy
		return this->size;
	}
	int getSum() {
		//Ho va ten: Vo Le Khanh Duy
		long long sum = 0;
		for (int i = 0; i < this->size; i++)
			sum += this->array[i];
		return sum;
	}
	int getMax() {
		//Ho va ten: Vo Le Khanh Duy
		int max = this->array[0];
		for (int i = 1; i < this->size; i++)
			if (max < this->array[i])
				max = this->array[i];
		return max;
	}
	CIntArray getEven() {
		//Ho va ten: Vo Le Khanh Duy

		int countEven = 0;
		for (int i = 0; i < this->size; i++)
			if (this->array[i] % 2 == 0)
				countEven++;
		CIntArray res;//khong cap phat truc tiep tren CIntArray vi co the gay leak memory
		res.size = countEven;//
		res.array = new int[res.size];//
		int resIndex = 0;
		for (int i = 0; i < this->size; i++)
			if (this->array[i] % 2 == 0)
				res.array[resIndex++] = this->array[i];
		return res;
	}
	void erase(int idx) {
		//Ho va ten: Vo Le Khanh Duy
		if (idx >= 0 && idx <= this->size - 1) {
			CIntArray res;
			res.size = this->size - 1;
			res.array = new int[res.size];
			for (int i = 0; i < idx; i++)//
				res.array[i] = this->array[i];
			for (int i = idx + 1; i < this->size; i++)//
				res.array[i - 1] = this->array[i];
			delete[]this->array;
			this->size = res.size;
			this->array = new int[this->size];
			for (int i = 0; i < this->size; i++)
				this->array[i] = res.array[i];
			res.remove();
		}
	}
	void insert(int idx, int val) {
		//Ho va ten: Vo Le Khanh Duy
		if (idx >= 0 && idx < this->size + 1) {
			if (this->size == 0) {//
				//mang chua co phan tu
				this->array = new int[1];
				this->size = 1;
				this->array[idx] = val;
			}
			else {
				CIntArray tmp;
				tmp.size = this->size + 1;				tmp.array = new int[tmp.size];//
				int i;
				for (i = 0; i < idx; i++)
					tmp.array[i] = this->array[i];
				tmp.array[idx] = val;
				for (i = idx + 1; i < tmp.size; i++)
					tmp.array[i] = this->array[i - 1];
				this->size = tmp.size;
				for (i = 0; i < this->size; i++)
					this->array[i] = tmp.array[i];
				tmp.remove();
			}
		}
	}
	CIntArray operator+(const CIntArray &other){
		//Ho va ten: Vo Le Khanh Duy
		if(this->size == 0)
			if(other.size == 0){
				CIntArray res;
				return res;
			}
			else{
				CIntArray res(other);
				return res;
			}
		else{
			if(other.size == 0){
				CIntArray res(*this);
				return res;
			}
			else{
				CIntArray res;
				res.size = this->size + other.size;
				res.array = new int [res.size];
				int resArrayIndex = 0;
				for(int i=0;i<this->size;i++)
					res.array[resArrayIndex++] = this->array[i];
				for(int i=0;i<other.size;i++)
					res.array[resArrayIndex++] = other.array[i];
				return res;//
			}
		}
	}
	CIntArray operator++(){
		//Ho va ten: Vo Le Khanh Duy
		CIntArray res;
		res.size = ++this->size;
		res.array = new int [res.size];
		for(int i = 0;i<res.size-1;i++)
			res.array[i] = this->array[i];
		delete []this->array;
		
		this->size = res.size;
		this->array = new int [this->size];
		for(int i=0;i<this->size;i++)
			this->array[i] = res.array[i];
		return *this;
	}
	CIntArray operator--(){
		//Ho va ten: Vo Le Khanh Duy
		if (this->size > 0){
			CIntArray res;
		res.size = this->size - 1;
		res.array = new int [res.size];
		for(int i = 0;i<res.size;i++)
			res.array[i] = this->array[i];
		
		this->size = res.size;
		delete []this->array;
		this->array = new int [this->size];
		for(int i=0;i<this->size;i++)
			this->array[i] = res.array[i];
		}
		else{
			cout<<"Mang rong! Khong giam 1 don vi duoc!";
			exit(0);
		}
	}
	bool operator>(const CIntArray &other){
		if(this->size == 0)
			return false;
		if(other.size == 0)
			return true;
		int minSize = this->size < other.size ? this->size : other.size;
		for(int i = 0; i < minSize; i++){
			// bang thi con duyet
			if(this->array[i] > other.array[i])
				return true;
			if(this->array[i] < other.array[i])
				return false;
		}
		if(this->size <= other.size)
			return false;
		return true;
	}
	bool operator<(const CIntArray &other){
		if(this->size == 0)
			return true;
		if(other.size == 0)
			return false;
		int minSize = this->size <= other.size ? this->size: other.size;
		for(int i=0;i<minSize;i++){
			if(this->array[i]>other.array[i])
				return false;
			if(this->array[i]<other.array[i])
				return true;
		}
		if(this->size >= other.size)// TH 2 mang nhu nhau hoac mang dau tien nhieu phan tu hon
			return false;
		return true;
	}
	bool operator==(const CIntArray &other){
		if(this->size == 0 && other.size == 0)
			return true;
		int minSize = this->size > other.size ? this->size : other.size;
		for(int i=0;i<minSize;i++)
			if(this->array[i] > other.array[i] || this->array[i] < other.array[i])
				return false;
			//dang bang phan tren -> xet them phan sau
			if(this->size == other.size)
				return true;
			return false;
	}
	CIntArray operator=(const CIntArray& other) {
		if (this == &other)	return *this;// a = a
		
		if(other.size > 0){
			if (this->size > 0)
				delete[]this->array;
			else{
				this->size = 0;
				this->array = NULL;
			}
			this->size = other.size;
			this->array = new int [this->size];	
			for (int i = 0; i < this->size; i++)				
				this->array[i] = other.array[i];
		}
		else{
			this->size = 0;
			this->array = NULL;
		}
		return *this;
	}
	CIntArray operator+=(const CIntArray &other){
		//+= tra ve tham chieu doi tuong hien tai -> do de ho tro a += b+ = c
		*this = *this + other;
		return *this;
	}
	friend istream& operator>>(istream &in, CIntArray &arrayName);
	friend ostream& operator<<(ostream &out, const CIntArray &arrayName);
};
istream& operator>>(istream &in, CIntArray &arrayName){
	cout<<"\nNhap so luong phan tu: ";
	in>>arrayName.size;
	if(arrayName.size <= 0)
		arrayName.size = 0;
	else{
		if(arrayName.array != NULL)//mang can nhap da co phan tu
			delete []arrayName.array;
		arrayName.array = new int [arrayName.size];
		cout<<"Nhap cac phan tu mang: ";
		for(int i = 0; i<arrayName.size;i++){
			cout<<"\nNhap array["<<i<<"] = ";
			in>>arrayName.array[i];
		}
	}
	return in;
}
ostream& operator<<(ostream &out, const CIntArray &arrayName){
	out<<"\nSo luong phan tu mang: "<<arrayName.size;
	if(arrayName.size == 0)
		cout<<"\nMang rong!";
	else{
		out<<"\nCac phan tu mang: \n";
		for(int i = 0; i < arrayName.size ; i++)
			cout<<arrayName.array[i]<<" ";
	}
	return out;
}
void inputDynamicArray(int*& a, int& n) {
	//Ho va ten: Vo Le Khanh Duy

	cout << "Nhap so luong phan tu can them: ";
	cin >> n;
	a = new int[n];
	for (int i = 0; i < n; i++) {
		cout << "Nhap a[" << i << "] = ";
		cin >> a[i];
	}
}
void printDynamicArray(int* a, int n) {
	//Ho va ten: Vo Le Khanh Duy

	cout << "So luong phan tu mang dong: " << n;
	if (n > 0) {
		cout << "\nCac phan tu mang dong: \n";
		for (int i = 0; i < n; i++)
			cout << a[i] << " ";
	}
}
int main(int argc, char* argv[])
{
	//CIntArray a, b;
//	a.input();
//	b.input();
//	//a.print();
//	++a;
//	--a;
//	a.print();
//	if(a>b)
//		cout<<"Yes";
//	else
//		cout<<"No";
		
	//CIntArray a, b;
//	a.input();
//	b.input();
//	if(a<b)
//		cout<<"Yes";
//	else
//		cout<<"No";
		
//	CIntArray a, b;
//	a.input();
//	b.input();
//	if(a == b)
//		cout<<"Yes";
//	else
//		cout<<"No";

	//CIntArray a, b;
//	cout<<"Nhap mang a: ";
//	a.input();
//	cout<<"Nhap mang b: ";
//	b.input();
//	b = a;
//	cout<<"Mang b sau khi gan bang mang a: ";
//	b.print();

	//CIntArray a, b;
//	cout<<"Nhap mang a: ";
//	a.input();
//	cout<<"Nhap mang b: ";
//	b.input();
//	a += b;//hoac co the them += c
//	cout<<"Mang a sau khi +=  mang b:";
//	a.print();
	
	//CIntArray a;
//	cin >> a;
//	a.print();

	//CIntArray a, b;
//	cin >> a >> b;
//	cout << a << b;
	
	bool Break = false;
	int n = -1, tmp = -1;
	while (Break == false) {
		cout << "\n----------\n";
		cout << "Danh sach cac thao tac: \n";
		cout << "\n1. Test tao lap mac dinh";
		cout << "\n2. Test tao lap mot tham so";
		cout << "\n3. Test tao lap sao chep";
		cout << "\n4. Test gop hai mang (mang thu hai sau mang thu nhat) (dung operator +)";
		cout<<"\n5. operator ++";
		cout << "\n6. operator--";
		cout << "\n7. So sanh mang lon (dung operator >)";
		cout << "\n8. So sanh mang be (dung operator <)";
		cout << "\n9. So sanh mang  bang (dung operator ==)";
		cout << "\n10. Gan mang cho mang (dung operator =)";
		cout << "\n11. operator += (gop 2 mang luu vao mang dau tien)";
		cout << "\n12. operator >> ";
		cout << "\n13. operator << ";
		cout << "\nNhap so tuong ung thao tac can thuc hien [1->13]: ";
		cin >> n;
		switch (n) {
			case 1:{
				cout<<"\nTest tao lap mac dinh";
				CIntArray a;
				a.print();
				break;
			}
			case 2:{
				cout<<"\nTest tao lap co tham so truyen vao la kich thuoc";
				int n;
				cout<<"\nNhap so phan tu mang: ";
				cin>>n;
				CIntArray c(n);
				cout<<"\nMang sau khi gan tham so truyen vao n tao ra n phan tu 0: \n";
				c.print();
				break;
			}
			case 3:{
				cout<<"\nTest tao lap sao chep";
				CIntArray a;
				cout<<"\nNhap thong tin mang a: ";
				a.input();
				CIntArray b(a);
				cout<<"\nMang b sau khi tao lap sao chep mang a:";
				b.print();
				break;
			}
			case 4:{
				CIntArray a, b;
				cout<<"\nNhap thong tin mang a: ";
				a.input();
				cout<<"\nNhap thong tin mang b: ";
				b.input();
				CIntArray c = a + b;
				cout<<"\nMang c sau khi gop mang b vao sau mang a: ";
				c.print();
			}
			case 5:{
				CIntArray a;
				a.input();
				cout<<"\nMang sau khi tang them 1 don vi: ";
				++a;
				a.print();
				break;	
			}
			case 6:{
				CIntArray a;
				a.input();
				cout<<"\nMang sau khi giam 1 don vi (1 phan tu bi xoa): ";
				--a;
				a.print();
				break;
			}
			case 7:{
				break;	
			}
			default: {
				cout << "\nSo vua nhap khong hop le! Chuong trinh ket thuc tai day! ";
				Break = true;
				break;
			}
		}
		while (Break == false && tmp != 1) {
			cout << "\nNhap 1 de lam tiep, nhap 0 de dung: ";
			cin >> tmp;
			if (tmp == 0)
				Break = true;
		}
	}
	return 0;
}

//Ho va ten: Vo Le Khanh Duy
//#include<iostream>
//using namespace std;
//#define Max 100
//class CIntArray {
//	//Ho va ten: Vo Le Khanh Duy
//private:
//	int* array;
//	int size;
//public:
//	CIntArray() {
//		//Ho va ten: Vo Le Khanh Duy
//		array = NULL;
//		size = 0;
//	}
//	CIntArray(int otherArray[], int otherArraySize) {
//		//Ho va ten: Vo Le Khanh Duy
//		if (otherArraySize > 0) {
//			this->size = otherArraySize;
//			this->array = new int[this->size];
//			for (int i = 0; i < this->size; i++)
//				this->array[i] = otherArray[i];
//		}
//	}
//	CIntArray(const CIntArray& other) {
//		//Ho va ten: Vo Le Khanh Duy
//		// tao lap sao chep ->  gan vao vung nho moi -> ko anh huong cai con lai khi thay doi 1 trong 2; &- thao tac truc tiep tu vung nho da co
//		this->size = other.size;
//		if (other.array != NULL) {
//			this->array = new int[this->size];
//			for (int i = 0; i < this->size; i++)
//				this->array[i] = other.array[i];
//		}
//	}
//	void input() {
//		//Ho va ten: Vo Le Khanh Duy
//		cout << "\nNhap kich thuoc mang can nhap: ";
//		cin >> this->size;
//		if (this->size != 0) {
//			cout << "Nhap cac phan tu mang:\n";
//			this->array = new int[this->size];
//			for (int i = 0; i < this->size; i++) {
//				cout << "Nhap array[" << i << "] = ";
//				cin >> this->array[i];
//			}
//		}
//	}
//	void print() {
//		//Ho va ten: Vo Le Khanh Duy
//		cout << "\nKich thuoc mang: " << this->size;
//		if (this->size > 0) {
//			cout << "\nCac phan tu mang: " << "\n";
//			for (int i = 0; i < this->size; i++)
//				cout << this->array[i] << " ";
//		}
//		else
//			cout << "\nMang rong!";
//		cout << "\n";
//	}
//	void remove() {
//		//Ho va ten: Vo Le Khanh Duy
//		if (this->size > 0) {
//			delete[]this->array;
//			this->size = 0;
//		}
//	}
//	void addElement(int val) {
//		//Ho va ten: Vo Le Khanh Duy
//		// add last
//		if (this->size == 0) {
//			this->array = new int[1];
//			this->size = 1;
//		}
//		else {
//			this->size += 1;
//			int* tmp = new int[this->size];
//			for (int i = 0; i < this->size - 1; i++)
//				tmp[i] = this->array[i];
//			delete[]this->array;
//			this->array = tmp;
//		}
//		array[this->size - 1] = val;
//	}
//	void addElement(int* p, int n) {
//		//Ho va ten: Vo Le Khanh Duy
//		if (this->size == 0 && n > 0)
//			this->array = new int[n];
//		if (n > 0) {
//			int i;
//			int* tmp = new int[this->size + n];
//			for (i = 0; i < this->size; i++)
//				tmp[i] = array[i];
//			this->size += n;
//			for (int j = 0; i < this->size; i++, j++)
//				tmp[i] = p[j];
//			array = tmp;
//		}
//	}
//	int getElement(int idx) {
//		//Ho va ten: Vo Le Khanh Duy
//		if (idx >= 0 && idx < this->size)
//			return this->array[idx];
//	}
//	int getSize() {
//		//Ho va ten: Vo Le Khanh Duy
//		return this->size;
//	}
//	int getSum() {
//		//Ho va ten: Vo Le Khanh Duy
//		long long sum = 0;
//		for (int i = 0; i < this->size; i++)
//			sum += this->array[i];
//		return sum;
//	}
//	int getMax() {
//		//Ho va ten: Vo Le Khanh Duy
//		int max = this->array[0];
//		for (int i = 1; i < this->size; i++)
//			if (max < this->array[i])
//				max = this->array[i];
//		return max;
//	}
//	CIntArray getEven() {
//		//Ho va ten: Vo Le Khanh Duy

//		int countEven = 0;
//		for (int i = 0; i < this->size; i++)
//			if (this->array[i] % 2 == 0)
//				countEven++;
//		CIntArray res;//khong cap phat truc tiep tren CIntArray vi co the gay leak memory
//		res.size = countEven;//
//		res.array = new int[res.size];//
//		int resIndex = 0;
//		for (int i = 0; i < this->size; i++)
//			if (this->array[i] % 2 == 0)
//				res.array[resIndex++] = this->array[i];
//		return res;
//	}
//	void erase(int idx) {
//		//Ho va ten: Vo Le Khanh Duy
//		if (idx >= 0 && idx <= this->size - 1) {
//			CIntArray res;
//			res.size = this->size - 1;
//			res.array = new int[res.size];
//			for (int i = 0; i < idx; i++)//
//				res.array[i] = this->array[i];
//			for (int i = idx + 1; i < this->size; i++)//
//				res.array[i - 1] = this->array[i];
//			delete[]this->array;
//			this->size = res.size;
//			this->array = new int[this->size];
//			for (int i = 0; i < this->size; i++)
//				this->array[i] = res.array[i];
//			res.remove();
//		}
//	}
//	void insert(int idx, int val) {
//		//Ho va ten: Vo Le Khanh Duy
//		if (idx >= 0 && idx < this->size + 1) {
//			if (this->size == 0) {//
//				//mang chua co phan tu
//				this->array = new int[1];
//				this->size = 1;
//				this->array[idx] = val;
//			}
//			else {
//				CIntArray tmp;
//				tmp.size = this->size + 1;				tmp.array = new int[tmp.size];//
//				int i;
//				for (i = 0; i < idx; i++)
//					tmp.array[i] = this->array[i];
//				tmp.array[idx] = val;
//				for (i = idx + 1; i < tmp.size; i++)
//					tmp.array[i] = this->array[i - 1];
//				this->size = tmp.size;
//				for (i = 0; i < this->size; i++)
//					this->array[i] = tmp.array[i];
//				tmp.remove();
//			}
//		}
//	}
//	CIntArray operator=(const CIntArray& other) {
//		if (this == &other)	return *this;// a = a
//		// xet th size = 0, size != 0
//		if (this->size > 0) {
//			delete[]this->array;
//			this->size = other.size;
//			this->array = new int[this->size];
//			for (int i = 0; i < this->size; i++)
//				this->array[i] = other.array[i];
//			return *this;
//		}//xem lai >0
//		else {
//			this->array = NULL;
//			this->size = 0;
//		}
//	}
//};
//void inputDynamicArray(int*& a, int& n) {
//	//Ho va ten: Vo Le Khanh Duy

//	cout << "Nhap so luong phan tu can them: ";
//	cin >> n;
//	a = new int[n];
//	for (int i = 0; i < n; i++) {
//		cout << "Nhap a[" << i << "] = ";
//		cin >> a[i];
//	}
//}
//void printDynamicArray(int* a, int n) {
//	//Ho va ten: Vo Le Khanh Duy

//	cout << "So luong phan tu mang dong: " << n;
//	if (n > 0) {
//		cout << "\nCac phan tu mang dong: \n";
//		for (int i = 0; i < n; i++)
//			cout << a[i] << " ";
//	}
//}
//int main(int argc, char* argv[])
//{
//	/*
//	// test tao lap mac dinh
//	CIntArray a;
//	a.print();
//	*/
//	/*
//	//Test tao lap co tham so truyen vao la mang

//	int b[Max], n;
//	cout<<"\nNhap so phan tu mang: ";
//	cin>>n;
//	for(int i=0;i<n;i++){
//		cout<<"\nb["<<i<<"] = ";
//		cin>>b[i];
//	}
//	CIntArray c(b,n);
//	cout<<"\nMang sao khi  gan tham so truyen vao tu mang vua nhap: \n";
//	c.print();*/

//	/*	//test tao lap sao chep
//		int b[Max], n;
//		cout<<"\nNhap so phan tu mang: ";
//		cin>>n;
//		for(int i=0;i<n;i++){
//			cout<<"\nb["<<i<<"] = ";
//			cin>>b[i];
//		}
//		CIntArray c(b,n), d(c);
//		cout<<"Mang sau khi tao lap sao chep:";
//		d.print();*/

//		/*	//test huy bo class mang
//			int b[Max], n;
//			cout<<"\nNhap so phan tu mang: ";
//			cin>>n;
//			for(int i=0;i<n;i++){
//				cout<<"\nb["<<i<<"] = ";
//				cin>>b[i];
//			}
//			CIntArray c(b,n);
//			cout<<"Mang sau khi gan tham so:";
//			c.print();
//			c.remove();
//			cout<<"\nMang sau khi huy: ";
//			c.print();
//		*/

//		/*	//test nhap class mang
//			CIntArray a;
//			a.input();
//		*/

//		/*	//test xuat mang
//			int b[Max], n;
//			cout<<"\nNhap so phan tu mang: ";
//			cin>>n;
//			for(int i=0;i<n;i++){
//				cout<<"\nb["<<i<<"] = ";
//				cin>>b[i];
//			}
//			CIntArray a(b,n);
//			a.print();
//		*/

//		/*	//test add Element (value)
//			CIntArray c;
//			c.input();
//			c.print();
//			int tmp;
//			cout<<"\nNhap phan tu can them vao: ";
//			cin>>tmp;
//			cout<<"\Mang sau khi them gia tri "<<tmp<<": ";
//			c.addElement(tmp);
//			c.print();
//		*/

//		/*
//			//test: void addElement(int *p, int n)

//		//	//mang rong ban dau
//		//	CIntArray b;
//		//	b.print();
//		//	int n, *a;
//		//	inputDynamicArray(a,n);
//		//	printDynamicArray(a,n);
//		//	cout<<"\nClass mang sau khi them mang dong: ";
//		//	b.addElement(a,n);
//		//	b.print();

//			//mang ban dau co phan tu
//			CIntArray b;
//			b.input();
//			b.print();
//			int n, *a;
//			cout<<"\nNhap mang dong can them: \n";
//			inputDynamicArray(a,n);
//			printDynamicArray(a,n);
//			cout<<"\nClass mang sau khi them mang dong: ";
//			b.addElement(a,n);
//			b.print();
//		*/

//		/*
//			//test: lay ra phan tu trong class mang
//			CIntArray b;
//			b.input();
//			b.print();
//			int idx;
//			cout<<"\nNhap index can lay trong mang: ";
//			cin>>idx;
//			if(idx >= 0 && idx < b.getSize())
//				cout<<"Gia tri phan tu tai vi tri "<<idx<<": "<<b.getElement(idx);
//			else
//				cout<<"Khong ton tai vi tri vua nhap ";
//		*/

//		/*	//test get size
//			CIntArray a;
//			a.input();
//			cout<<"\nSo luong phan tu class mang: "<<a.getSize();
//		*/

//		/*	//test get sum
//			CIntArray a;
//			a.input();
//			cout<<"\nTong gia tri cac phan tu class mang: "<<a.getSum();
//		*/

//		/*	//test get max
//			CIntArray a;
//			a.input();
//			if(a.getSize() != 0)
//				cout<<"\nGia tri lon nhat class mang: "<<a.getMax();
//			else
//				cout<<"\nKhong co gia tri lon nhat class mang";
//		*/

//		/*	//test get even
//			CIntArray a, b;
//			a.input();
//			b = a.getEven();
//			if(b.getSize() != 0){
//				cout<<"\nCac phan tu chan lay ra tu mang ban dau: ";
//				b.print();
//			}
//			else
//				cout<<"\nMang ban dau khong co phan tu chan! ";
//		*/

//		/*	//test xoa phan tu tai idx
//			CIntArray a, b;
//			a.input();
//			if(a.getSize() != 0){
//				int idx;
//				cout<<"\nNhap index can xoa: ";
//				cin>>idx;
//				a.erase(idx);
//				cout<<"\nClass mang sau khi xoa phan tu tai vi tri "<<idx<<": ";
//				a.print();
//			}
//			else
//				cout<<"Mang rong khong xoa duoc!";
//			*/

//			//test insert(idx,value)
//	/*CIntArray a;
//	a.input();
//	int idx, value;
//	cout << "\nNhap index can chen: ";
//	cin >> idx;
//	cout << "\nNhap value can chen: ";
//	cin >> value;
//	a.insert(idx, value);
//	cout << "\nClass mang sau khi chen " << value << " tai vi tri " << idx << ": ";
//	a.print();

//	//thay mo cac comment o ham main de test nha thay!*/
//	CIntArray a;
//	a.input();
//	CIntArray b;
//	b.input();
//	b = a;

//	b.print();
//	return 0;
//}
